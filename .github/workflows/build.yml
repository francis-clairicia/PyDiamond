name: Build and test

on:
  pull_request:
    types:
      - opened
      - synchronize
    paths-ignore:
      - '**/.gitignore'
      - '**/LICENSE'
      - '.bumpversion.cfg'
      - '**.md'
  push:
    branches:
      - main
      - release/**
    tags-ignore:
      - '*'
    paths-ignore:
      - '**/.gitignore'
      - '**/LICENSE'
      - '.bumpversion.cfg'
      - '**.md'
      - '.github/scripts/**'
      - '.github/workflows/*.yml'
      # re-include current file to not be excluded
      - '!.github/workflows/build.yml'
  workflow_dispatch:
    inputs:
      SOURCE_DATE_EPOCH:
        description: 'SOURCE_DATE_EPOCH value for reproducible builds'
        required: false
        type: string
      artifact-name:
        description: 'Artifact name'
        required: true
        default: 'pydiamond-dist'
        type: string
  workflow_call:
    inputs:
      SOURCE_DATE_EPOCH:
        description: 'SOURCE_DATE_EPOCH value for reproducible builds'
        required: false
        type: string
      artifact-name:
        description: 'Artifact name'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  test:
    if: github.event_name != 'push' || !startsWith(github.event.head_commit.message, 'Bump version:')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2022, macos-12]
        python_version: ['3.10']

    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install tox
      - name: Launch tests
        run: tox

  build:
    needs: test
    runs-on: ubuntu-latest
    env:
      SOURCE_DATE_EPOCH: ${{ inputs.SOURCE_DATE_EPOCH }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install flit
      - name: Compute SOURCE_DATE_EPOCH from commit date
        if: env.SOURCE_DATE_EPOCH == ''
        run: |
          date=`git show ${{ github.sha }} --pretty="%ct" --no-patch`
          echo "Using SOURCE_DATE_EPOCH=${date}"
          echo "SOURCE_DATE_EPOCH=${date}" >> $GITHUB_ENV
      - name: Build packages
        run: flit build
      - name: Upload packages as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact-name || 'pydiamond-dist' }}
          path: dist

  check:
    needs: build
    runs-on: ubuntu-latest
    
    name: Post-build checks
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install twine
      - name: Retrieve packages
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact-name || 'pydiamond-dist' }}
          path: dist
      - name: twine check
        run: twine check --strict dist/*
