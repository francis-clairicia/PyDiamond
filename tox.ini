[tox]
minversion = 4.0
envlist =
    py313
    mypy-{pkg,test,examples}
    pre-commit
skip_missing_interpreters = true

[base]
setenv =
    PYTHONHASHSEED = 100

[testenv]
package = wheel
groups =
    test
	coverage
setenv =
    {[base]setenv}
    COVERAGE_CORE=sysmon
    COV_CORE_CONFIG={toxinidir}{/}pyproject.toml
commands =
    pytest -p 'no:cacheprovider' {tty:--color=yes} {posargs:-n auto --dist=load --cov --cov-report=html}

[testenv:check-build-sdist]  # 'flit build' and 'python -m build' should generate the same tar
recreate = true
skip_install = true
deps =
    flit >=3.7.1,<4
    build
allowlist_externals =
    bash
    diff
    find
    mv
    rm
setenv =
    {[base]setenv}
    SOURCE_DATE_EPOCH = 1577833200  # 01/01/2020
commands_pre =
    -mv dist {envtmpdir}{/}dist.bak
commands =
    python -m build --sdist --outdir {envtmpdir}{/}isolated-build-dist
    flit build --format sdist
    bash -ec 'diff $(find {envtmpdir}{/}isolated-build-dist -type f -name "*.tar.gz") $(find dist -type f -name "*.tar.gz")'
commands_post =
    rm -rf dist
    -mv {envtmpdir}{/}dist.bak dist

[testenv:build]
skip_install = true
groups =
    build
setenv =
    {[base]setenv}
passenv =
    SOURCE_DATE_EPOCH
commands =
    python -m build --outdir {toxinidir}{/}dist

[testenv:mypy-{pkg,test,examples}]
package = wheel
groups =
    mypy
    test: test
setenv =
    {[base]setenv}
	MYPY_CACHE_DIR = {envtmpdir}{/}.mypy_cache
    MYPY_OPTS = --config-file {toxinidir}{/}pyproject.toml
commands =
    # package
    full: mypy {env:MYPY_OPTS} -p pydiamond
    # tests
    test: mypy {env:MYPY_OPTS} {toxinidir}{/}tests
    # examples
    examples: mypy {env:MYPY_OPTS} {toxinidir}{/}demo.py

[testenv:pre-commit]
skip_install = true
groups =
    pre-commit
setenv =
    {[base]setenv}
    SKIP=mypy
passenv =
    PRE_COMMIT_HOME
    XDG_CACHE_HOME
commands =
    pre-commit run {posargs:--all-files}
