[build-system]
# Minimum requirements for the build system to execute.
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "pydiamond-engine"
readme = "README.md"
requires-python = ">=3.10"
authors = [
  {name = "FrankySnow9", email = "clairicia.rcj.francis@gmail.com"},
]
license = {file = "LICENSE"}
dependencies = [
  "pygame==2.1.2",
  "cryptography~=38.0.1",
  "typing_extensions>=4.4.0,<5"
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Topic :: Software Development :: Libraries :: pygame",
  "Typing :: Typed"
]
dynamic = ["version", "description"]
keywords = ["game", "game-engine", "game-development", "pygame", "pygame-library", "game-engine-2d"]

[project.urls]
Homepage = "https://github.com/francis-clairicia/PyDiamond"

[project.optional-dependencies]
test = [
  "pytest~=7.1.2",
  "pytest-mock~=3.10.0",
]
dev = [
  "mypy==0.991",
  "isort>=5.10.1",
  "black>=22.6.0",
  "flake8>=5.0.4",
  "bump2version>=1.0.1",
  "tox>=3.27.1",
  "pip-tools>=6.10.0",
  "flit>=3.7.1,<4",
  "pre-commit>=2.20.0",
]

############################ Flit configuration ############################
[tool.flit.module]
name = "pydiamond"

[tool.flit.sdist]
exclude = [
  ".github/",
  "demo_resources/",
  "demo.py",
]

############################ Development tools configuration ############################

[tool.isort]
profile = "black"
line_length = 130
combine_as_imports = true
sections = ["FUTURE", "STDLIB", "PYDIAMOND", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_pydiamond = ["pydiamond"]
add_imports = ["from __future__ import annotations"]

[tool.black]
line-length = 130
target-version = ["py310"]

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
python_version = "3.10"
show_error_codes = true
warn_unused_configs = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
no_implicit_reexport = true
strict_equality = true
enable_error_code = ["truthy-bool", "ignore-without-code"]

[tool.pytest.ini_options]
minversion = "7.1.2"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow",
    "functional: marks tests as functional tests",
]
